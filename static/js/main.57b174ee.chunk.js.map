{"version":3,"sources":["Header.js","EventCalendar.js","App.js","index.js"],"names":["Header","react_default","a","createElement","className","src","alt","name","type","placeholder","DialogTitle","withStyles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","props","children","classes","onClose","disableTypography","Typography","variant","IconButton","aria-label","onClick","Close_default","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","EventCalendar","_React$useState","React","useState","_React$useState2","Object","slicedToArray","open","setOpen","handleClose","Button","Dialog","aria-labelledby","EventCalendar_DialogTitle","id","EventCalendar_DialogContent","dividers","EventCalendar_DialogActions","autoFocus","DemoApp","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","calendarRef","createRef","handleSaveEvent","event","lastId","state","calendarEvents","forEach","item","index","array","setState","title","handleDateClick","arg","newEvenId","Date","prevState","toConsumableArray","timeZone","start","date","allDay","end","bacground","dayEl","style","backgroundColor","onSubmit","preventDefault","handleChange","target","value","handleEvent","info","newVibleEvent","startEvent","localStorage","getItem","JSON","parse","setItem","stringify","_this2","_this$state","src_Header_0","main_esm","defaultView","plugins","dayGridPlugin","interactionPlugin","timeGridPlugin","ref","calendarComponentRef","dateClick","eventClick","events","eventClickInfo","header","left","onChange","filter","Component","ReactDOM","render","App_DemoApp","document","getElementById"],"mappings":"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","file":"static/js/main.57b174ee.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Header.css';\n\nconst Header = () => (\n  <div>\n    <header className=\"header\">\n      <div className=\"header__search__input\">\n        <img\n          src=\"img/icon_search.svg\"\n          alt=\"search\"\n          className=\"header__search\"\n        />\n        <input\n          name=\"search\"\n          type=\"text\"\n          className=\"n__header__input\"\n          placeholder=\"Search transactions, invoices or help\"\n        />\n      </div>\n\n      <img alt=\"planet\" className=\"header__planet\" src=\"img/SupportIocn.svg\" />\n      <img alt=\"path\" className=\"header__planet\" src=\"img/Path_9.svg\" />\n      <img alt=\"planet\" className=\"header__planet\" src=\"img/Path_3.svg\" />\n      <img alt=\"planet\" className=\"header__planet\" src=\"img/Divider.svg\" />\n      <p className=\"header__name\">John Doe</p>\n      <img alt=\"planet\" className=\"header__planet\" src=\"img/Path_26.svg\" />\n      <img alt=\"planet\" className=\"header__avatar\" src=\"img/Avatar@2x.png\" />\n    </header>\n    <div className=\"main\" />\n  </div>\n);\n\nexport default Header;\n","/* eslint-disable react/no-this-in-sfc */\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose } = props;\n\n  return (\n    <MuiDialogTitle disableTypography className={classes.root}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={onClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function EventCalendar() {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"secondary\" onClick={handleClickOpen}>\n        Open dialog\n      </Button>\n      <Dialog\n        onClose={handleClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n      >\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          Modal title\n        </DialogTitle>\n        <DialogContent dividers>\n          <p>название собитие</p>\n          <input\n            className=\"form-control\"\n            placeholder=\"What needs to be done?\"\n            name=\"title\"\n            type=\"text\"\n          />\n          <div className=\"form-group\">\n            <p>start собитие</p>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"title\"\n              placeholder=\"Название собития\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <p>end собитие</p>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"title\"\n              placeholder=\"Название собития\"\n            />\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Save changes\n          </Button>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","/* eslint-disable react/sort-comp */\n/* eslint-disable no-undef */\n/* eslint-disable no-lone-blocks */\n/* eslint-disable jsx-a11y/label-has-for */\n/* eslint-disable no-return-assign */\n/* eslint-disable comma-dangle */\n/* eslint-disable no-param-reassign */\nimport React from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport Header from './Header';\nimport EventCalendar from './EventCalendar';\nimport './App.css';\n\nexport default class DemoApp extends React.Component {\n  constructor(...props) {\n    super(...props);\n\n    this.state = {\n      lastId: '-',\n      newVibleEvent: false,\n      title: '',\n      calendarEvents: [{\n        timeZone: 'local',\n        id: new Date(),\n        title: 'new',\n        start: new Date(),\n        startEvent: false,\n      // bacground: 'blue',\n      },\n      ],\n    };\n  }\n\n  calendarRef = React.createRef();\n\n  componentWillMount() {\n    if (localStorage.getItem('calendarEvents')) {\n      this.setState({\n        calendarEvents: JSON.parse(localStorage.getItem('calendarEvents')),\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    localStorage\n      .setItem('calendarEvents', JSON.stringify(this.state.calendarEvents));\n  }\n\n  handleSaveEvent = (event) => {\n    const { lastId } = this.state;\n\n    this.state.calendarEvents.forEach((item, index, array) => {\n      if (item.id === lastId) {\n        item = !item;\n      }\n    });\n    this.setState({\n      title: lastId,\n    });\n  }\n\n  handleDateClick = (arg) => {\n    const newEvenId = new Date();\n\n    this.setState(prevState => ({\n      lastId: newEvenId,\n      calendarEvents: [\n        ...prevState.calendarEvents,\n        {\n          timeZone: 'local',\n          title: prevState.title,\n          start: arg.date,\n          allDay: arg.allDay,\n          end: new Date(),\n          id: newEvenId,\n          bacground: arg.dayEl.style.backgroundColor = 'blue',\n        },\n      ],\n    }));\n  }\n\n  onSubmit = (event) => {\n    event.preventDefault();\n\n    this.setState({\n      calendarEvents: [{\n        title: '',\n      }],\n    });\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      title: event.target.value,\n    });\n  }\n\n  handleEvent = (info) => {\n    // const eventObj = info.event;\n\n    //   if (eventObj.url) {\n    //     )\n\n    //     info.jsEvent.preventDefault();\n    //   } else {\n    //     this.closeModalnew(); {\n    //       this.setState({ modalIsOpen: false });\n    //     }\n    //   }\n\n    this.setState({\n      newVibleEvent: true,\n    });\n  }\n\n  render() {\n    const { newVibleEvent, calendarEvents } = this.state;\n\n    return (\n      <div>\n        <Header />\n        <FullCalendar\n          defaultView=\"dayGridMonth\"\n          plugins={[dayGridPlugin, interactionPlugin, timeGridPlugin]}\n          ref={this.calendarComponentRef}\n          dateClick={this.handleDateClick}\n          eventClick={this.handleEvent}\n          events={this.state.calendarEvents}\n          eventClickInfo={this.state.eventClickInfo}\n          header={{\n            left: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek',\n          }}\n        />\n        <EventCalendar\n          handleEvent={this.handleEvent}\n          onSubmit={this.onSubmit}\n          handleChange={this.handleChange}\n          title={this.state.title}\n        />\n        {newVibleEvent ? (\n          <form onSubmit={this.onSubmit} id=\"dialog\" className=\"main-group\">\n            <div className=\"form-group \">\n              <p>название собитие</p>\n              <input\n                className=\"form-control\"\n                placeholder=\"What needs to be done?\"\n                onChange={this.handleChange}\n                value={this.state.title}\n                name=\"title\"\n                type=\"text\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <p>start собитие</p>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"title\"\n                placeholder=\"Название собития\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <p>end собитие</p>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"title\"\n                placeholder=\"Название собития\"\n              />\n            </div>\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={() => this.handleSaveEvent(calendarEvents\n                .filter(event => event.id === this.state.lastId))}\n            >\n                Save event\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={() => this.handleSaveEvent(calendarEvents\n                .filter(event => event.id === this.state.lastId))}\n            >\n              delete event\n            </button>\n          </form>\n        )\n          : ''\n        }\n\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}